{"version":3,"sources":["webpack:///./src/views/Comments.vue","webpack:///./src/factories/SocketMessenger.js","webpack:///./src/factories/SocketMessage.js","webpack:///./src/views/Comments.vue?b446"],"names":["type","addComment","comment","comments","key","id","text","removeComment","SocketMessenger","url","this","pool","timeouts","WSObj","connected","WebSocket","onopen","onOpen","bind","onclose","onClose","onerror","onError","onmessage","onMessage","e","console","log","index","findIndex","v","message","data","TMID","clearTimeout","splice","m","onSuccess","timeout","t","messageId","timeoutId","wasClean","socketMessageObject","send","setTimeout","removeFromPoolById","push","error","socketMessageId","close","SocketMessage","Math","round","Date","now","random","name","socketMessenger","connect","disconnect","methods","sendMessage","response","String","__exports__","render"],"mappings":"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","file":"js/Comments.5994df64.js","sourcesContent":["<template>\n  <div>\n    <input type=\"text\" v-model=\"comment\" @keypress.enter=\"addComment\" />\n    <button @click=\"addComment\">Добавить комментарий</button>\n    <ul>\n      <li v-for=\"comment in comments\" :key=\"comment.id\">\n        <span>{{ comment.text }}</span>\n        <span>\n          <button @click=\"removeComment(comment.id)\">удалить</button>\n        </span>\n      </li>\n    </ul>\n  </div>\n</template>\n\n<script>\nimport { SocketMessenger } from \"../factories/SocketMessenger\";\nimport { SocketMessage } from \"../factories/SocketMessage\";\n\nexport default {\n  name: \"Comments\",\n  data() {\n    return {\n      comments: [\n        {\n          id: \"1\",\n          text: \"Тестовый коммент 1\"\n        },\n        {\n          id: \"2\",\n          text: \"Это шедевр\"\n        },\n        {\n          id: \"3\",\n          text: \"Это прекрасно\"\n        },\n        {\n          id: \"4\",\n          text: \"Лучшее, что я видел\"\n        },\n        {\n          id: \"5\",\n          text: \"Два чая этому автору\"\n        }\n      ],\n      comment: \"\",\n      socketMessenger: new SocketMessenger(\"wss://ws.ifelse.io\")\n    };\n  },\n  mounted() {\n    this.socketMessenger.connect();\n  },\n  beforeDestroy() {\n    this.socketMessenger.disconnect();\n  },\n  methods: {\n    removeComment(id) {\n      this.socketMessenger.sendMessage(\n        new SocketMessage({\n          message: id,\n          onSuccess: response => {\n            const index = this.comments.findIndex(v => v.id === id);\n            if (index > -1) {\n              this.comments.splice(index, 1);\n            }\n            console.log(\"Removed:\", response.data);\n          },\n          onError: error => {\n            console.log(\"remove comment error:\", error);\n          },\n          timeout: 500\n        })\n      );\n    },\n    addComment() {\n      this.socketMessenger.sendMessage(\n        new SocketMessage({\n          message: this.comment,\n          onSuccess: response => {\n            this.comments.push({\n              id: String(Math.round(Math.random() * 10000)),\n              text: response.data\n            });\n            this.comment = \"\";\n          },\n          onError: error => {\n            console.log(\"add comment error:\", error);\n          }\n        })\n      );\n    }\n  }\n};\n</script>\n\n<style scoped></style>\n","export class SocketMessenger {\n  constructor(url) {\n    this.pool = [];\n    this.timeouts = [];\n    this.url = url;\n    this.WSObj = null;\n    this.connected = false;\n  }\n\n  connect() {\n    this.WSObj = new WebSocket(this.url);\n    this.WSObj.onopen = this.onOpen.bind(this);\n    this.WSObj.onclose = this.onClose.bind(this);\n    this.WSObj.onerror = this.onError.bind(this);\n    this.WSObj.onmessage = this.onMessage.bind(this);\n  }\n\n  onError(e) {\n    console.log(\"Error:\", e);\n    const index = this.pool.findIndex(v => v.message === e.data);\n    if (index > -1) {\n      this.pool[index].onError(e);\n      const TMID = this.pool[index].TMID;\n      if (TMID !== null) clearTimeout(TMID);\n      this.pool.splice(index, 1);\n    }\n  }\n\n  onMessage(m) {\n    console.log(\"Message:\", m);\n    const index = this.pool.findIndex(v => v.message === m.data);\n    if (index > -1) {\n      const message = this.pool[index];\n      message.onSuccess(m);\n      if (message.timeout) {\n        const index = this.timeouts.findIndex(\n          t => t.messageId === message.messageId\n        );\n        if (index > -1) {\n          clearTimeout(this.timeouts[index].timeoutId);\n          this.timeouts.splice(index, 1);\n        }\n      }\n      this.pool.splice(index, 1);\n    }\n  }\n\n  onOpen() {\n    console.log(\"Connected\");\n    this.connected = true;\n  }\n\n  onClose(e) {\n    if (e.wasClean) {\n      console.log(\"Closed\");\n    } else {\n      console.log(\"Broken\");\n    }\n    this.connected = false;\n  }\n\n  sendMessage(socketMessageObject) {\n    if (!this.connected) {\n      console.error(\"Socket not connected\");\n      return;\n    }\n    this.WSObj.send(socketMessageObject.message);\n    if (socketMessageObject.timeout) {\n      const timeoutId = setTimeout(() => {\n        this.removeFromPoolById(socketMessageObject.messageId);\n        console.log(\"TIMEOUTED\", socketMessageObject.message);\n      }, socketMessageObject.timeout);\n      this.timeouts.push({\n        messageId: socketMessageObject.messageId,\n        timeoutId\n      });\n    }\n    this.pool.push(socketMessageObject);\n  }\n\n  removeFromPoolById(socketMessageId) {\n    const index = this.pool.findIndex(v => v.messageId === socketMessageId);\n    if (index) this.pool.splice(index, 1);\n  }\n\n  disconnect() {\n    this.WSObj.close();\n  }\n}\n","export class SocketMessage {\n  constructor({ message = \"\", onSuccess, onError, timeout = 0 } = {}) {\n    this.messageId = Math.round(Date.now() * Math.random());\n    this.message = message;\n    this.onSuccess = typeof onSuccess === \"function\" ? onSuccess : () => {};\n    this.onError = typeof onError === \"function\" ? onError : () => {};\n    this.timeout = timeout;\n  }\n}\n","import { render } from \"./Comments.vue?vue&type=template&id=44e41ede\"\nimport script from \"./Comments.vue?vue&type=script&lang=js\"\nexport * from \"./Comments.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/Users/pixlo/projects/vue-test-task/node_modules/vue-loader-v16/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"sourceRoot":""}